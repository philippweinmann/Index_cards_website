{"version":3,"sources":["serviceWorker.js","mixins/chartjs.js","theme/index.js","theme/shadows.js","theme/typography.js","layouts/DashboardLayout/NavBar/NavItem.js","layouts/DashboardLayout/NavBar/index.js","layouts/DashboardLayout/TopBar.js","layouts/DashboardLayout/index.js","layouts/MainLayout/TopBar.js","layouts/MainLayout/index.js","views/errors/NotFoundView.js","views/AddCard/AddCardView.js","views/Cards/Subjects.js","routes.js","views/Cards/OtherCards.js","views/Cards/Cards.js","views/Cards/index.js","components/GlobalStyles.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Chart","helpers","extend","elements","Rectangle","prototype","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","options","horizontal","base","x","y","height","width","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","theme","createMuiTheme","palette","background","dark","default","colors","common","white","paper","primary","main","indigo","secondary","text","blueGrey","shadows","typography","h1","fontWeight","fontSize","letterSpacing","h2","h3","h4","h5","h6","overline","useStyles","makeStyles","item","display","paddingTop","paddingBottom","button","color","fontWeightMedium","justifyContent","padding","textTransform","icon","marginRight","spacing","title","active","NavItem","className","href","Icon","rest","classes","ListItem","clsx","disableGutters","Button","activeClassName","component","RouterLink","to","size","subject","items","mobileDrawer","desktopDrawer","avatar","cursor","NavBar","onMobileClose","openMobile","useLocation","useEffect","pathname","content","Box","flexDirection","alignItems","p","Typography","name","variant","Divider","List","map","key","flexGrow","Hidden","lgUp","Drawer","anchor","onClose","open","mdDown","defaultProps","root","borderRadius","logo","overflow","wrapper","flex","breakpoints","up","paddingLeft","contentContainer","image","marginTop","maxWidth","minHeight","margin","bullet","transform","pos","marginBottom","div","routes","boxShadow","header","img","expand","marginLeft","transition","transitions","create","duration","shortest","expandOpen","red","card","borderTopLeftRadius","borderTopRightRadius","mobileStepper","borderBottomRightRadius","borderBottomLeftRadius","paddingRight","createStyles","boxSizing","html","body","a","textDecoration","GlobalStyles","App","routing","useRoutes","ThemeProvider","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9119fd38.chunk.js","sourcesContent":["/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { Chart } from 'react-chartjs-2';\n\n// ChartJS extension rounded bar chart\n// https://codepen.io/jedtrow/full/ygRYgo\nfunction draw() {\n  const { ctx } = this._chart;\n  const vm = this._view;\n  let { borderWidth } = vm;\n\n  let left;\n  let right;\n  let top;\n  let bottom;\n  let signX;\n  let signY;\n  let borderSkipped;\n  let radius;\n\n  // If radius is less than 0 or is large enough to cause drawing errors a max\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\n  let { cornerRadius } = this._chart.config.options;\n  if (cornerRadius < 0) {\n    cornerRadius = 0;\n  }\n\n  if (typeof cornerRadius === 'undefined') {\n    cornerRadius = 0;\n  }\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || 'bottom';\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || 'left';\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    const halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    const borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n    const borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n    const borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  const borders = ['bottom', 'left', 'top', 'right'];\n  let startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  let corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (let i = 1; i < 4; i += 1) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    const width = corners[2][0] - corners[1][0];\n    const height = corners[0][1] - corners[1][1];\n    const x = corners[1][0];\n    const y = corners[1][1];\n\n    radius = cornerRadius;\n    // Fix radius being too large\n    if (radius > Math.abs(height) / 2) {\n      radius = Math.floor(Math.abs(height) / 2);\n    }\n    if (radius > Math.abs(width) / 2) {\n      radius = Math.floor(Math.abs(width) / 2);\n    }\n\n    if (height < 0) {\n      // Negative values in a standard bar chart\n      const xTl = x;\n      const xTr = x + width;\n      const yTl = y + height;\n      const yTr = y + height;\n\n      const xBl = x;\n      const xBr = x + width;\n      const yBl = y;\n      const yBr = y;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else if (width < 0) {\n      // Negative values in a horizontal bar chart\n      const xTl = x + width;\n      const xTr = x;\n      const yTl = y;\n      const yTr = y;\n\n      const xBl = x + width;\n      const xBr = x;\n      const yBl = y + height;\n      const yBr = y + height;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else {\n      // Positive Value\n      ctx.moveTo(x + radius, y);\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(\n        x + width,\n        y + height,\n        x + width - radius,\n        y + height\n      );\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n    }\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n}\n\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\n  draw\n});\n","import { createMuiTheme, colors } from '@material-ui/core';\nimport shadows from './shadows';\nimport typography from './typography';\n\nconst theme = createMuiTheme({\n  palette: {\n    background: {\n      dark: '#F4F6F8',\n      default: colors.common.white,\n      paper: colors.common.white\n    },\n    primary: {\n      main: colors.indigo[500]\n    },\n    secondary: {\n      main: colors.indigo[500]\n    },\n    text: {\n      primary: colors.blueGrey[900],\n      secondary: colors.blueGrey[600]\n    }\n  },\n  shadows,\n  typography\n});\n\nexport default theme;\n","export default [\n  'none',\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\n];\n","export default {\n  h1: {\n    fontWeight: 500,\n    fontSize: 35,\n    letterSpacing: '-0.24px'\n  },\n  h2: {\n    fontWeight: 500,\n    fontSize: 29,\n    letterSpacing: '-0.24px'\n  },\n  h3: {\n    fontWeight: 500,\n    fontSize: 24,\n    letterSpacing: '-0.06px'\n  },\n  h4: {\n    fontWeight: 500,\n    fontSize: 20,\n    letterSpacing: '-0.06px'\n  },\n  h5: {\n    fontWeight: 500,\n    fontSize: 16,\n    letterSpacing: '-0.05px'\n  },\n  h6: {\n    fontWeight: 500,\n    fontSize: 14,\n    letterSpacing: '-0.05px'\n  },\n  overline: {\n    fontWeight: 500\n  }\n};\n","import React from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  ListItem,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  item: {\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  button: {\n    color: theme.palette.text.secondary,\n    fontWeight: theme.typography.fontWeightMedium,\n    justifyContent: 'flex-start',\n    letterSpacing: 0,\n    padding: '10px 8px',\n    textTransform: 'none',\n    width: '100%'\n  },\n  icon: {\n    marginRight: theme.spacing(1)\n  },\n  title: {\n    marginRight: 'auto'\n  },\n  active: {\n    color: theme.palette.primary.main,\n    '& $title': {\n      fontWeight: theme.typography.fontWeightMedium\n    },\n    '& $icon': {\n      color: theme.palette.primary.main\n    }\n  }\n}));\n\nconst NavItem = ({\n  className,\n  href,\n  icon: Icon,\n  title,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <ListItem\n      className={clsx(classes.item, className)}\n      disableGutters\n      {...rest}\n    >\n      <Button\n        activeClassName={classes.active}\n        className={classes.button}\n        component={RouterLink}\n        to={href}\n      >\n        {Icon && (\n          <Icon\n            className={classes.icon}\n            size=\"20\"\n          />\n        )}\n        <span className={classes.title}>\n          {title}\n        </span>\n      </Button>\n    </ListItem>\n  );\n};\n\nNavItem.propTypes = {\n  className: PropTypes.string,\n  href: PropTypes.string,\n  icon: PropTypes.elementType,\n  title: PropTypes.string\n};\n\nexport default NavItem;\n","import React, { useEffect } from 'react';\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Divider,\n  Drawer,\n  Hidden,\n  List,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavItem from './NavItem';\n\nconst subject = {\n  title: 'Informatik',\n};\n\nconst items = [\n  {\n    href: '/informatik/programmieren',\n    title: 'Programmieren'\n  },\n];\n\nconst useStyles = makeStyles(() => ({\n  mobileDrawer: {\n    width: 180\n  },\n  desktopDrawer: {\n    width: 180,\n    top: 64,\n    height: 'calc(100% - 64px)'\n  },\n  avatar: {\n    cursor: 'pointer',\n    width: 64,\n    height: 64\n  }\n}));\n\nconst NavBar = ({ onMobileClose, openMobile }) => {\n  const classes = useStyles();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (openMobile && onMobileClose) {\n      onMobileClose();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname]);\n\n  const content = (\n    <Box\n      height=\"100%\"\n      display=\"flex\"\n      flexDirection=\"column\"\n    >\n      <Box\n        alignItems=\"center\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        p={2}\n      >\n        <Typography\n          className={classes.name}\n          color=\"textPrimary\"\n          variant=\"h4\"\n        >\n          {subject.title}\n        </Typography>\n      </Box>\n      <Divider />\n      <Box p={0}>\n        <List>\n          {items.map((item) => (\n            <NavItem\n              href={item.href}\n              key={item.title}\n              title={item.title}\n            />\n          ))}\n        </List>\n      </Box>\n      <Box flexGrow={1} />\n    </Box>\n  );\n\n  return (\n    <>\n      <Hidden lgUp>\n        <Drawer\n          anchor=\"left\"\n          classes={{ paper: classes.mobileDrawer }}\n          onClose={onMobileClose}\n          open={openMobile}\n          variant=\"temporary\"\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n      <Hidden mdDown>\n        <Drawer\n          anchor=\"left\"\n          classes={{ paper: classes.desktopDrawer }}\n          open\n          variant=\"persistent\"\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n    </>\n  );\n};\n\nNavBar.propTypes = {\n  onMobileClose: PropTypes.func,\n  openMobile: PropTypes.bool\n};\n\nNavBar.defaultProps = {\n  onMobileClose: () => {},\n  openMobile: false\n};\n\nexport default NavBar;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Badge,\n  Box,\n  Hidden,\n  Button,\n  IconButton,\n  Toolbar,\n  Typography,\n  makeStyles, List\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AddIcon from '@material-ui/icons/Add';\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    backgroundColor: '#444444',\n  },\n  avatar: {\n    width: 60,\n    height: 60\n  },\n  button: {\n    borderRadius: 30,\n    color: 'white',\n    backgroundColor: '#444444',\n    '&:hover': {\n      color: '#444444',\n      backgroundColor: 'white',\n    }\n  },\n  logo: {\n    color: 'white',\n  }\n}));\n\nconst TopBar = ({\n  className,\n  onMobileNavOpen,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [notifications] = useState([]);\n\n  return (\n    <AppBar\n      className={clsx(classes.root, className)}\n      elevation={10}\n      {...rest}\n    >\n      <Toolbar>\n        <Hidden mdDown>\n          <RouterLink to=\"/Index_cards_website/\">\n            <Typography variant=\"h4\" className={classes.logo}>\n              CARDS HERO\n            </Typography>\n          </RouterLink>\n          <Box flexGrow={1} />\n          <Button\n            variant=\"outlined\"\n            key=\"Add new card\"\n            title=\"Add new card\"\n            href=\"/addCard\"\n            className={classes.button}\n            startIcon={<AddIcon />}\n          >\n            Add new card\n          </Button>\n        </Hidden>\n        <Hidden lgUp>\n          <IconButton\n            color=\"inherit\"\n            href=\"/\"\n          >\n            <HomeOutlinedIcon />\n          </IconButton>\n          <Box flexGrow={1} />\n          <IconButton\n            color=\"inherit\"\n            href=\"/addCard\"\n          >\n            <AddIcon />\n          </IconButton>\n          <IconButton\n            color=\"inherit\"\n            onClick={onMobileNavOpen}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopBar.propTypes = {\n  className: PropTypes.string,\n  onMobileNavOpen: PropTypes.func\n};\n\nexport default TopBar;\n","import React, { useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport NavBar from './NavBar';\nimport TopBar from './TopBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64,\n    [theme.breakpoints.up('lg')]: {\n      paddingLeft: 180,\n    }\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto'\n  }\n}));\n\nconst DashboardLayout = () => {\n  const classes = useStyles();\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\n\n  return (\n    <div className={classes.root}>\n      <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} />\n      <NavBar\n        onMobileClose={() => setMobileNavOpen(false)}\n        openMobile={isMobileNavOpen}\n      />\n      <div className={classes.wrapper}>\n        <div className={classes.contentContainer}>\n          <div className={classes.content}>\n            <Outlet />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardLayout;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Badge,\n  Box,\n  Hidden,\n  Button,\n  IconButton,\n  Toolbar,\n  Typography,\n  makeStyles, List\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AddIcon from '@material-ui/icons/Add';\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    backgroundColor: '#444444',\n  },\n  avatar: {\n    width: 60,\n    height: 60\n  },\n  button: {\n    borderRadius: 30,\n    color: 'white',\n    backgroundColor: '#444444',\n    '&:hover': {\n      color: '#444444',\n      backgroundColor: 'white',\n    }\n  },\n  logo: {\n    color: 'white',\n  }\n}));\n\nconst TopBar = ({\n  className,\n  onMobileNavOpen,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [notifications] = useState([]);\n\n  return (\n    <AppBar\n      className={clsx(classes.root, className)}\n      elevation={10}\n      {...rest}\n    >\n      <Toolbar>\n        <Hidden mdDown>\n          <RouterLink to=\"/\">\n            <Typography variant=\"h4\" className={classes.logo}>\n              CARDS HERO\n            </Typography>\n          </RouterLink>\n          <Box flexGrow={1} />\n          <Button\n            variant=\"outlined\"\n            key=\"Add new card\"\n            title=\"Add new card\"\n            href=\"/addCard\"\n            className={classes.button}\n            startIcon={<AddIcon />}\n          >\n            Add new card\n          </Button>\n        </Hidden>\n        <Hidden lgUp>\n          <IconButton\n            color=\"inherit\"\n            href=\"/\"\n          >\n            <HomeOutlinedIcon />\n          </IconButton>\n          <Box flexGrow={1} />\n          <IconButton\n            color=\"inherit\"\n            href=\"/addCard\"\n          >\n            <AddIcon />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopBar.propTypes = {\n  className: PropTypes.string,\n  onMobileNavOpen: PropTypes.func\n};\n\nexport default TopBar;\n","import React from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport TopBar from './TopBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto'\n  }\n}));\n\nconst MainLayout = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <TopBar />\n      <div className={classes.wrapper}>\n        <div className={classes.contentContainer}>\n          <div className={classes.content}>\n            <Outlet />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MainLayout;\n","import React from 'react';\nimport {\n  Box,\n  Container,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n  image: {\n    marginTop: 50,\n    display: 'inline-block',\n    maxWidth: '100%',\n    width: 560\n  }\n}));\n\nconst NotFoundView = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"404\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        <Container maxWidth=\"md\">\n          <Typography\n            align=\"center\"\n            color=\"textPrimary\"\n            variant=\"h1\"\n          >\n            404: Page not found!\n          </Typography>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default NotFoundView;\n","import React from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Paper,\n  Checkbox,\n  Container,\n  FormHelperText,\n  Link,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100vh',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n  paper: {\n    padding: theme.spacing(5),\n    borderRadius: 20,\n  }\n}));\n\nconst AddCardView = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n\n  const postCard = async (input) => {\n    fetch('http://116.202.29.212:3000/index_cards', {\n      method: 'POST',\n      body: JSON.stringify({\n        id: input.question + input.answer,\n        title: input.name,\n        front: input.question,\n        back: input.answer,\n        subject: input.subject,\n        field: input.field,\n        link: input.link,\n      }),\n      headers: { 'Content-type': 'application/json; charset=UTF-8' }\n    })\n      .then((response) => response.json());\n    navigate('/');\n  };\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Register\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        <Container maxWidth=\"sm\">\n          <Paper className={classes.paper} variant=\"elevation\" elevation={20}>\n            <Formik\n              initialValues={{\n                question: '',\n                name: '',\n                subject: '',\n                answer: '',\n                field: '',\n                link: '',\n                policy: false\n              }}\n              validationSchema={\n              Yup.object().shape({\n                question: Yup.string().max(255).required('Question is required'),\n                name: Yup.string().max(255).required('Name is required'),\n                subject: Yup.string().max(255).required('Subject is required'),\n                field: Yup.string().max(255).required('Field is required'),\n                link: Yup.string().max(255).required('Link is required'),\n                answer: Yup.string().max(255).required('answer is required'),\n                policy: Yup.boolean().oneOf([true], 'This field must be checked')\n              })\n            }\n              onSubmit={() => {\n                navigate('/register', { replace: true });\n              }}\n            >\n              {({\n                errors,\n                handleBlur,\n                handleChange,\n                handleSubmit,\n                isSubmitting,\n                touched,\n                values\n              }) => (\n                <form onSubmit={handleSubmit}>\n                  <Box mb={3}>\n                    <Typography\n                      color=\"textPrimary\"\n                      variant=\"h2\"\n                    >\n                      Add new card\n                    </Typography>\n                    <Typography\n                      color=\"textSecondary\"\n                      gutterBottom\n                      variant=\"body2\"\n                    >\n                      as an anonymous user\n                    </Typography>\n                  </Box>\n                  <TextField\n                    error={Boolean(touched.name && errors.name)}\n                    fullWidth\n                    helperText={touched.name && errors.name}\n                    label=\"Name\"\n                    margin=\"normal\"\n                    name=\"name\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.name}\n                    variant=\"outlined\"\n                  />\n                  <TextField\n                    error={Boolean(touched.subject && errors.subject)}\n                    fullWidth\n                    helperText={touched.subject && errors.subject}\n                    label=\"Subject\"\n                    margin=\"normal\"\n                    name=\"subject\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.subject}\n                    variant=\"outlined\"\n                  />\n                  <TextField\n                    error={Boolean(touched.question && errors.question)}\n                    fullWidth\n                    helperText={touched.question && errors.question}\n                    label=\"Question\"\n                    margin=\"normal\"\n                    name=\"question\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"question\"\n                    value={values.question}\n                    variant=\"outlined\"\n                  />\n                  <TextField\n                    error={Boolean(touched.answer && errors.answer)}\n                    fullWidth\n                    helperText={touched.answer && errors.answer}\n                    label=\"Answer\"\n                    margin=\"normal\"\n                    name=\"answer\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"answer\"\n                    value={values.answer}\n                    variant=\"outlined\"\n                  />\n                  <TextField\n                    error={Boolean(touched.field && errors.field)}\n                    fullWidth\n                    helperText={touched.field && errors.field}\n                    label=\"Field\"\n                    margin=\"normal\"\n                    name=\"field\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"field\"\n                    value={values.field}\n                    variant=\"outlined\"\n                  />\n                  <TextField\n                    error={Boolean(touched.link && errors.link)}\n                    fullWidth\n                    helperText={touched.link && errors.link}\n                    label=\"Link\"\n                    margin=\"normal\"\n                    name=\"link\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"link\"\n                    value={values.link}\n                    variant=\"outlined\"\n                  />\n                  <Box\n                    alignItems=\"center\"\n                    display=\"flex\"\n                    ml={-1}\n                  >\n                    <Checkbox\n                      checked={values.policy}\n                      name=\"policy\"\n                      onChange={handleChange}\n                    />\n                    <Typography\n                      color=\"textSecondary\"\n                      variant=\"body1\"\n                    >\n                      I have read the\n                      {' '}\n                      <Link\n                        color=\"primary\"\n                        component={RouterLink}\n                        to=\"#\"\n                        underline=\"always\"\n                        variant=\"h6\"\n                      >\n                        Terms and Conditions\n                      </Link>\n                    </Typography>\n                  </Box>\n                  {Boolean(touched.policy && errors.policy) && (\n                    <FormHelperText error>\n                      {errors.policy}\n                    </FormHelperText>\n                  )}\n                  <Box my={2}>\n                    <Button\n                      color=\"primary\"\n                      disabled={isSubmitting}\n                      fullWidth\n                      size=\"large\"\n                      type=\"submit\"\n                      variant=\"contained\"\n                      onClick={() => postCard(values)}\n                    >\n                      Add card now\n                    </Button>\n                  </Box>\n                </form>\n              )}\n            </Formik>\n          </Paper>\n        </Container>\n\n      </Box>\n    </Page>\n  );\n};\n\nexport default AddCardView;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, Grid, CardActionArea } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 400,\n    height: 130,\n    borderRadius: 20,\n    margin: theme.spacing(2)\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  div: {\n  }\n}));\n\nconst subjects = [\n  {\n    title: 'Informatik',\n    id: 1,\n    color: 'primary',\n  },\n];\n\nconst Subjects = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.div}>\n      <Grid container justify=\"center\">\n        {subjects.map((item) => (\n          <Card elevation={10} className={classes.root}>\n            <CardActionArea\n              title={item.title}\n              href=\"/informatik/programmieren\"\n            >\n              <Typography style={{ paddingTop: '10%', paddingBottom: '15%' }} align=\"center\" variant=\"h1\" color={item.color} gutterBottom>\n                {item.title}\n              </Typography>\n            </CardActionArea>\n          </Card>\n        ))}\n      </Grid>\n    </div>\n  );\n};\nexport default Subjects;\n","import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport DashboardLayout from 'src/layouts/DashboardLayout';\nimport MainLayout from 'src/layouts/MainLayout';\nimport NotFoundView from 'src/views/errors/NotFoundView';\nimport AddCardView from 'src/views/AddCard/AddCardView';\nimport Subjects from './views/Cards/Subjects';\nimport CardsView from './views/Cards/index';\n\nconst routes = [];\n\nexport default routes;\n","import React, { useEffect } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Chip from '@material-ui/core/Chip';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport clsx from 'clsx';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport { red } from '@material-ui/core/colors';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 700,\n    marginBottom: theme.spacing(1),\n    borderRadius: 20,\n    backgroundColor: theme.palette.background.dark,\n    width: '100%',\n    '&:hover': {\n      borderRadius: 30,\n      boxShadow: '0px 20px 20px 0px rgba(0,0,0,0.2)',\n    }\n  },\n  header: {\n    display: 'flex',\n    alignItems: 'center',\n    height: 50,\n    paddingLeft: theme.spacing(4),\n    backgroundColor: theme.palette.background.default,\n  },\n  img: {\n    height: 255,\n    maxWidth: 400,\n    overflow: 'hidden',\n    display: 'block',\n    width: '100%',\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nconst OtherCards = () => {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const [allCardsInfo = [], setAllCardsInfo] = React.useState('');\n\n  useEffect(() => fetch('http://116.202.29.212:3000/index_cards').then((response) => response.json()).then((data) => {\n    setAllCardsInfo(data);\n    console.log(allCardsInfo);\n  }), []);\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justify=\"center\"\n      alignItems=\"center\"\n    >\n      {[...allCardsInfo].map((item) => (\n        <Card variant=\"outlined\" className={classes.root}>\n          <CardHeader\n            avatar={(\n              <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                R\n              </Avatar>\n        )}\n            action={(\n              <IconButton aria-label=\"settings\">\n                <MoreVertIcon />\n              </IconButton>\n        )}\n            title={item.title}\n            subheader=\"5 hours ago\"\n          />\n          <Divider />\n          <CardContent>\n            <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              {item.front}\n            </Typography>\n          </CardContent>\n          <CardActions disableSpacing>\n            <Chip label={item.field} color=\"secondary\" size=\"small\" />\n            <IconButton\n              className={clsx(classes.expand, {\n                [classes.expandOpen]: expanded,\n              })}\n              onClick={handleExpandClick}\n              aria-expanded={expanded}\n              aria-label=\"show more\"\n            >\n              <ExpandMoreIcon />\n            </IconButton>\n          </CardActions>\n          <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n            <CardContent>\n              <Typography paragraph>Answer:</Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" paragraph>\n                {item.back}\n              </Typography>\n            </CardContent>\n          </Collapse>\n        </Card>\n      ))}\n\n    </Grid>\n  );\n};\nexport default OtherCards;\n","import React, { useEffect } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Card from '@material-ui/core/Card';\nimport Avatar from '@material-ui/core/Avatar';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport clsx from 'clsx';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { isMobile } from 'react-device-detect';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n  },\n  card: {\n    maxWidth: 700,\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n  },\n  header: {\n    display: 'flex',\n    alignItems: 'center',\n    height: 50,\n    paddingLeft: theme.spacing(4),\n    backgroundColor: theme.palette.background.default,\n  },\n  img: {\n    height: 255,\n    maxWidth: 400,\n    overflow: 'hidden',\n    display: 'block',\n    width: '100%',\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n  mobileStepper: {\n    borderBottomRightRadius: 20,\n    borderBottomLeftRadius: 20,\n  },\n}));\n\nconst Cards = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [allCardsInfo = [], setAllCardsInfo] = React.useState('');\n\n  useEffect(() => fetch('http://116.202.29.212:3000/index_cards').then((response) => response.json()).then((data) => {\n    setAllCardsInfo(data);\n    console.log(allCardsInfo);\n  }), []);\n\n  const maxSteps = allCardsInfo.length;\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  // eslint-disable-next-line no-nested-ternary\n  if (isMobile) {\n    window.addEventListener('resize', handleExpandClick);\n  }\n\n  const handleNext = () => {\n    setExpanded(false);\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Card elevation={5} className={classes.card}>\n        <CardHeader\n          avatar={(\n            <Avatar aria-label=\"recipe\" className={classes.avatar}>\n              {allCardsInfo ? allCardsInfo[activeStep].title[0] : <Skeleton variant=\"circle\" />}\n            </Avatar>\n        )}\n          action={(\n            <IconButton aria-label=\"settings\">\n              <MoreVertIcon />\n            </IconButton>\n        )}\n          title={allCardsInfo ? allCardsInfo[activeStep].title : <Skeleton variant=\"text\" />}\n          subheader=\"5 hours ago\"\n        />\n        <Divider />\n        <CardContent>\n          <Typography variant=\"h3\" color=\"textPrimary\" component=\"p\">\n            {allCardsInfo ? allCardsInfo[activeStep].front : <Skeleton variant=\"rect\" width={210} height={118} />}\n          </Typography>\n        </CardContent>\n        <Divider variant=\"middle\" />\n        <CardActions disableSpacing>\n          <Typography variant=\"body1\">\n            Answer:\n          </Typography>\n          <IconButton\n            className={clsx(classes.expand, {\n              [classes.expandOpen]: expanded,\n            })}\n            onClick={handleExpandClick}\n            aria-expanded={expanded}\n            aria-label=\"show more\"\n          >\n            <ExpandMoreIcon />\n          </IconButton>\n        </CardActions>\n        <Divider variant=\"middle\" />\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          <CardContent>\n            <Typography variant=\"h3\" color=\"textPrimary\" paragraph>\n              {allCardsInfo ? allCardsInfo[activeStep].back : <Skeleton variant=\"rect\" width={210} height={118} />}\n            </Typography>\n          </CardContent>\n        </Collapse>\n      </Card>\n\n      <MobileStepper\n        className={classes.mobileStepper}\n        elevation={5}\n        steps={maxSteps}\n        position=\"static\"\n        variant=\"progress\"\n        activeStep={activeStep}\n        nextButton={(\n          <Button size=\"small\" onClick={handleNext} disabled={activeStep === maxSteps - 1}>\n            Next\n            {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n          </Button>\n        )}\n        backButton={(\n          <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\n            {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n            Back\n          </Button>\n        )}\n      />\n    </div>\n  );\n};\nexport default Cards;\n","import React from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles,\n  Typography,\n  Paper,\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport OtherCards from './OtherCards';\nimport Cards from './Cards';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n  paper: {\n    paddingTop: theme.spacing(2),\n    borderRadius: 20,\n    paddingBottom: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n  }\n}));\n\nconst CardsView = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Cards\"\n    >\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={1}\n            md={6}\n            xs={12}\n          />\n          <Grid\n            item\n            lg={7}\n            md={6}\n            xs={12}\n          >\n            <Cards />\n          </Grid>\n\n          <Grid\n            item\n            lg={1}\n            md={6}\n            xs={12}\n          />\n          <Grid\n            item\n            lg={3}\n            md={6}\n            xs={12}\n          >\n            <Typography align=\"center\" variant=\"h4\" gutterBottom>\n              Other cards\n            </Typography>\n            <Paper className={classes.paper}>\n              <OtherCards />\n            </Paper>\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default CardsView;\n","import { createStyles, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => createStyles({\n  '@global': {\n    '*': {\n      boxSizing: 'border-box',\n      margin: 0,\n      padding: 0,\n    },\n    html: {\n      '-webkit-font-smoothing': 'antialiased',\n      '-moz-osx-font-smoothing': 'grayscale',\n      height: '100%',\n      width: '100%'\n    },\n    body: {\n      backgroundColor: '#f4f6f8',\n      height: '100%',\n      width: '100%'\n    },\n    a: {\n      textDecoration: 'none'\n    },\n    '#root': {\n      height: '100%',\n      width: '100%'\n    }\n  }\n}));\n\nconst GlobalStyles = () => {\n  useStyles();\n\n  return null;\n};\n\nexport default GlobalStyles;\n","import 'react-perfect-scrollbar/dist/css/styles.css';\nimport React from 'react';\nimport { useRoutes } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core';\nimport 'src/mixins/chartjs';\nimport theme from 'src/theme';\nimport routes from 'src/routes';\nimport GlobalStyles from 'src/components/GlobalStyles';\n\nconst App = () => {\n  const routing = useRoutes(routes);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      {routing}\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render((\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n), document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}